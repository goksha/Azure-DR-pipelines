name: "Azure CLI"

on:
  workflow_dispatch:

jobs:
  job_id:
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: terraform
    steps:

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      env:
        ARM_CLIENT_ID : ${{ secrets.ARM_CLIENT_ID }}
        ARM_TENANT_ID : ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID : ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_CLIENT_SECRET : ${{ secrets.ARM_CLIENT_SECRET }}
      run: terraform init
      
    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      env:
        ARM_CLIENT_ID : ${{ secrets.ARM_CLIENT_ID }}
        ARM_TENANT_ID : ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID : ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_CLIENT_SECRET : ${{ secrets.ARM_CLIENT_SECRET }}      
      run: terraform plan

    - name: Terraform Apply
      env:
        ARM_CLIENT_ID : ${{ secrets.ARM_CLIENT_ID }}
        ARM_TENANT_ID : ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID : ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_CLIENT_SECRET : ${{ secrets.ARM_CLIENT_SECRET }}      
      run: terraform apply -auto-approve
